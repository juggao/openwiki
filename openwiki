#!/usr/bin/env python

# openwiki: open a wikipedia lemma from the commandline
# AO-2019
#
# INSTALL : pip install wptools
#           cp openwiki ~/bin (or a location in your $PATH)
#           chmod u+x openwiki
#
# https://meta.wikimedia.org/wiki/List_of_Wikipedias
#
import wptools
import sys
import os
import pycurl
import webbrowser
#from termcolor import colored

# Define a context manager to suppress stdout and stderr.
class suppress_stdout_stderr(object):
    '''
    A context manager for doing a "deep suppression" of stdout and stderr in 
    Python, i.e. will suppress all print, even if the print originates in a 
    compiled C/Fortran sub-function.
       This will not suppress raised exceptions, since exceptions are printed
    to stderr just before a script exits, and after the context manager has
    exited (at least, I think that is why it lets exceptions through).      

    '''
    def __init__(self):
        # Open a pair of null files
        self.null_fds =  [os.open(os.devnull,os.O_RDWR) for x in range(2)]
        # Save the actual stdout (1) and stderr (2) file descriptors.
        self.save_fds = [os.dup(1), os.dup(2)]

    def __enter__(self):
        # Assign the null pointers to stdout and stderr.
        os.dup2(self.null_fds[0],1)
        os.dup2(self.null_fds[1],2)

    def __exit__(self, *_):
        # Re-assign the real stdout/stderr back to (1) and (2)
        os.dup2(self.save_fds[0],1)
        os.dup2(self.save_fds[1],2)
        # Close all file descriptors
        for fd in self.null_fds + self.save_fds:
            os.close(fd)

def main():
	argc = len(sys.argv)
	if argc == 1:
		print "openwiki <NAME> <WIKILANGUAGECODES>"
		return
	langcodes = sys.argv[2:argc]
	if len(langcodes) == 0:
		langcodes=['en']
	for langc in langcodes:
		try:
			page = wptools.page(sys.argv[1], lang=langc)
			with suppress_stdout_stderr():	
				try:
					page.get_query() 
				except pycurl.error as e:
					print (e)
					continue
			if "url" in page.data:
				url = page.data['url'].encode('utf-8').strip()
				webbrowser.open_new_tab(url)
			print '--'
		except LookupError:
			print langc+": Not found\n"

				
if __name__ == "__main__":
	main()
	
